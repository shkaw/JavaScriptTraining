

//2021 10 24
/*
JS
基本の動きは取得と書き換え
値段が書かれているのを取ってきて、足して、合計のところを書き換える
これが基本


*/


//2021 10 21
/*
JS
TimeIs...アプリ考え中
受け取る
受け取ったデータから生成
表示


*/


//2021 10 21
/*
JS
文字列で足し算されてしまうのを防ぐにはparseInt
標準入力を受け取るにはmainからargs[0]とか
参考URL
https://qiita.com/cotton11aq/items/a8b93d61fca8f83ffaae

*/

//2021 10 21
/*
JS
配列とオブジェクトの区別
どうやって使い分けるのか
縦に並べたくなるようなデータは配列向き
→一個の種類のデータ　都道府県とか
横に並べたくなるようなデータはオブジェクト向き
→名前、年齢などのデータ
→→縦横に広がるデータは配列とオブジェクトを組み合わせる
*/


//2021 10 20
/*
JS

readFileSyncなら複数のデータを受け取れる
[0] [1]など

*/


//2021 10 17
/*
JS
・関数スコープ
→関数の中でだけ使える変数
・ブロックスコープ
→まずブロックとは｛｝波カッコのこと
JSでは先に関数やメソッドの宣言をしなくてもいきなり波カッコを書くことができる
波カッコ(ブロック)の中で宣言したら波カッコの中でだけ有効になる

超入門から
無限にスクロールするページはJavaScriptから作られている


*/

//2021 10 16
/*
グローバルスコープ
スクリプトスコープ
関数スコープ
ブロックスコープ
モジュールスコープ

letやconstがスクリプトスコープ
windowオブジェクト自体がグローバルスコープ
スクリプトスコープもグローバルスコープと呼ばれる
出力が変わることもあるので注意が必要
・debugger;と打つと一時停止してくれる　ブレイクポイントのような感じ



*/



//2021 10 15
/*
JSのオブジェクトはCの構造体に似ている
メソッドとは、オブジェクトのプロパティに格納された関数
JSでは関数とメソッド、両方の言葉を使いつつ、意味を分けている
プログラムが無機質に動作する関数(足し合わせたりとか)などがオブジェクトに組み込まれると、メソッドと呼ばれるようになる
メソッドはオブジェクト指向の言葉
オブジェクト内のデータや関数にアクセスするなら"."を使う
*/

let obj = {
	prop1: function(){
		console.log('value');
	}
}

obj.prop1();


//2021 10 14
//EcmaScriptがコア部分
//node.js
//環境によって使用できる機能が変わる


